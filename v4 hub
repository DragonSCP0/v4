local Roact = require(game.ReplicatedStorage:WaitForChild("Roact"))

-- Funções de Utilidade
local function invokeServer(args)
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end

local function GetDistance(pos1, pos2)
    return (pos1 - pos2).Magnitude
end

local function Tweento(targetCFrame)
    -- Implementação para tweening
end

local function firetouchinterest(part, humanoidRootPart, toggle)
    -- Implementação para fire touch interest
end

local function CheckColorRipIndra()
    -- Implementação para verificar cores
end

-- Funções principais relacionadas à V4
local function CheckColorHas()
    local ColorsHas = {}
    for i, v in pairs(game.ReplicatedStorage.Remotes.CommF_:InvokeServer("getColors")) do
        if v["Unlocked"] then
            ColorsHas[v.HiddenName] = v
        end
    end
    return ColorsHas
end

local function CheckDoneColor()
    for i, v in next, game:GetService("Workspace").Map["BoatCastle"].Summoner.Circle:GetChildren() do
        if v:IsA("Part") and v:FindFirstChild("Part") and v.Part.BrickColor.Name == "Dark stone grey" then
            return false
        end
    end
    return true
end

local function ActivateColor(ColorName)
    local concho = {
        ["Hot pink"] = "Winter Sky",
        ["Really red"] = "Pure Red",
        ["Oyster"] = "Snow White"
    }
    local conchogg = concho[ColorName]
    if not CheckColorHas()[conchogg] then return "Cant" end
    if conchogg then
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer("activateColor", conchogg)
    end
end

local function AutoActiveColorRip_Indra()
    for i, v in pairs(CheckColorRipIndra()) do
        local kss = ActivateColor(i)
        if kss ~= "Cant" then
            Tweento(v.CFrame)
            wait(3)
            firetouchinterest(v.Part, game.Players.LocalPlayer.Character.HumanoidRootPart, 0)
            firetouchinterest(v.Part, game.Players.LocalPlayer.Character.HumanoidRootPart, 1)
        end
    end
end

local function CheckTorchTushita()
    local a
    if not game:GetService("Workspace").Map.Turtle.QuestTorches.Torch1.Particles.Main.Enabled then a = "1"
    elseif not game:GetService("Workspace").Map.Turtle.QuestTorches.Torch2.Particles.Main.Enabled then a = "2"
    elseif not game:GetService("Workspace").Map.Turtle.QuestTorches.Torch3.Particles.Main.Enabled then a = "3"
    elseif not game:GetService("Workspace").Map.Turtle.QuestTorches.Torch4.Particles.Main.Enabled then a = "4"
    elseif not game:GetService("Workspace").Map.Turtle.QuestTorches.Torch5.Particles.Main.Enabled then a = "5" end
    for i, v in next, game:GetService("Workspace").Map.Turtle.QuestTorches:GetChildren() do
        if v:IsA("MeshPart") and string.find(v.Name, a) and not v.Particles.Main.Enabled then
            return v
        end
    end
end

local function BuyGear()
    game.ReplicatedStorage.Remotes.CommF_:InvokeServer("UpgradeRace", "Buy")
end

local function GetPlayerKillTrial()
    local Chrs
    pcall(function()
        local TempleCFrame = CFrame.new(28730.0645, 14887.5371, -91.0957718, 0.557085216, -4.57713725e-08, 0.830455363, 9.81919115e-08, 1, -1.07530047e-08, -0.830455363, 8.75343389e-08, 0.557085216)
        if game.Players.LocalPlayer.PlayerGui.Main.Timer.Visible then
            if GetDistance(TempleCFrame) <= 380 then
                for i, v in pairs(game.Players:GetChildren()) do
                    if v.Name ~= game.Players.LocalPlayer.Name and (GetDistance(TempleCFrame, v.Character.HumanoidRootPart) <= 300) and v.Character.Humanoid.Health > 0 then
                        Chrs = v
                    end
                end
            end
        end
    end)
    return Chrs
end

local function TweenTempleLegit(fk)
    TweenTemple()
    local AllNPCS = getnilinstances()
    for i, v in pairs(game:GetService("Workspace").NPCs:GetChildren()) do
        table.insert(AllNPCS, v)
    end
    for i, v in pairs(AllNPCS) do
        if v.Name == "Mysterious Force" then TempleMysteriousNPC1 = v end
        if v.Name == "Mysterious Force3" then TempleMysteriousNPC2 = v end
    end
    Tweento(TempleMysteriousNPC2.HumanoidRootPart.CFrame)
    wait(0.5)
    if (TempleMysteriousNPC2.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 15 then
        game.ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress", "TeleportBack")
    end
    if not fk then
        if (TempleMysteriousNPC1.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 15 then
            game.ReplicatedStorage.Remotes.CommF_:InvokeServer("RaceV4Progress", "Teleport")
        end
    end
end

-- Interface usando Roact
local V4Interface = Roact.Component:extend("V4Interface")

function V4Interface:init()
    self:setState({
        autoActivateColor = false,
        buyGear = false,
        checkTorchTushita = false,
        getPlayerKillTrial = false,
        tweenTempleLegit = false
    })
end

function V4Interface:render()
    return Roact.createElement("ScreenGui", nil, {
        MainFrame = Roact.createElement("Frame", {
            Size = UDim2.new(0, 300, 0, 400),
            Position = UDim2.new(0.5, -150, 0.5, -200),
            BackgroundColor3 = Color3.fromRGB(25, 25, 25),
            BorderSizePixel = 0
        }, {
            UIListLayout = Roact.createElement("UIListLayout", {
                Padding = UDim.new(0, 10),
                FillDirection = Enum.FillDirection.Vertical,
                HorizontalAlignment = Enum.HorizontalAlignment.Center,
                VerticalAlignment = Enum.VerticalAlignment.Top
            }),
            Title = Roact.createElement("TextLabel", {
                Text = "V4 Automation",
                Size = UDim2.new(1, 0, 0, 50),
                BackgroundTransparency = 1,
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextScaled = true
            }),
            AutoActivateColorButton = Roact.createElement("TextButton", {
                Text = "Auto Activate Color",
                Size = UDim2.new(1, -20, 0, 50),
                BackgroundColor3 = Color3.fromRGB(50, 50, 50),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                [Roact.Event.Activated] = function()
                    self:setState({ autoActivateColor = not self.state.autoActivateColor })
                    if self.state.autoActivateColor then
                        AutoActiveColorRip_Indra()
                    end
                end
            }),
            BuyGearButton = Roact.createElement("TextButton", {
                Text = "Buy Gear",
                Size = UDim2.new(1, -20, 0, 50),
                BackgroundColor3 = Color3.fromRGB(50, 50, 50),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                [Roact.Event.Activated] = function()
                    self:setState({ buyGear = not self.state.buyGear })
                    if self.state.buyGear then
                        BuyGear()
                    end
                end
            }),
            CheckTorchTushitaButton = Roact.createElement("TextButton", {
                Text = "Check Torch Tushita",
                Size = UDim2.new(1, -20, 0, 50),
                BackgroundColor3 = Color3.fromRGB(50, 50, 50),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                [Roact.Event.Activated] = function()
                    self:setState({ checkTorchTushita = not self.state.checkTorchTushita })
                    if self.state.checkTorchTushita then
                        CheckTorchTushita()
                    end
                end
            }),
            GetPlayerKillTrialButton = Roact.createElement("TextButton", {
                Text = "Get Player Kill Trial",
                Size = UDim2.new(1, -20, 0, 50),
                BackgroundColor3 = Color3.fromRGB(50, 50, 50),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                [Roact.Event.Activated] = function()
                    self:setState({ getPlayerKillTrial = not self.state.getPlayerKillTrial })
                    if self.state.getPlayerKillTrial then
                        GetPlayerKillTrial()
                    end
                end
            }),
            TweenTempleLegitButton = Roact.createElement("TextButton", {
                Text = "Tween to Temple",
                Size = UDim2.new(1, -20, 0, 50),
                BackgroundColor3 = Color3.fromRGB(50, 50, 50),
                TextColor3 = Color3.fromRGB(255, 255, 255),
                [Roact.Event.Activated] = function()
                    self:setState({ tweenTempleLegit = not self.state.tweenTempleLegit })
                    if self.state.tweenTempleLegit then
                        TweenTempleLegit()
                    end
                end
            })
        })
    })
end

-- Montando a interface no jogo
local handle = Roact.mount(Roact.createElement(V4Interface), game.Players.LocalPlayer:WaitForChild("PlayerGui"))

-- Função para desmontar a interface
local function unmountInterface()
    Roact.unmount(handle)
end

game:BindToClose(unmountInterface)
